# -*- coding: utf-8 -*-
"""Assignment Submission - Python Basics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gmtcsipSYB1o-wN0DlRw4emXpTTfKCf9

1. What is python and why is it popular?
Ans. Python is a programming langauage which is easy to use and understand.
     Python is popular due to the following reasons:
     a. It has various libraries
     b. It is widely used in the industry
     c. It is widely used in data industry.

2. What is an interpreter in python?
Ans. In Python, an interpreter is a program that reads and executes Python code line by line, allowing you to see the results immediately.

3. What are pre defined keywords in python?
Ans. The pre defined keywords in python are some predefined and reserved words in Python that have special meanings. These help you to arrange and manipulate data and can't be used as variables in python.

4. Can keywords be used as variable names?
Ans. No keywords can't be used as variable names. Python will throw a error if you try to do so.

5. What is mutability in python ?
Ans. Mutability in python refers to if an object can be edited/modified after its already created.

6. Why are lists mutable but tuples immutable?
Ans. Lists are made for dynamic data—you can add, remove, and change items. Tuples, on the other hand, are more like locked boxes. They're great when you want to make sure data doesn’t accidentally get changed.

7. What is the difference between == and 'is' operation in python?
Ans. '==' checks if the values are the same however 'is' checks if the objects are literally the same in memory.

8. What are logical operators in python?
Ans. These are used to combine conditions:

      and (both conditions must be true),

      or (at least one must be true),

      not (reverses the condition)

9. What is type casting in python?
Ans. It is the method by which you can convert one data type to another. Like string to float or int.

10. What is the difference between implicit and explicit type casting?
Ans. Implicit: Python does it on its own (like converting int to float if needed).

Explicit: You tell it to do it, like int("5").

11. What is the purpose of conditional statement in python?
Ans. Conditional statements in Python enable the execution of specific code blocks based on whether a condition is true or false. They are fundamental for decision-making within programs, allowing for dynamic and adaptable code execution

12. How does elif statement work?
Ans. The “elif” keyword in Python, stands for “else if”. It can be used in conditional statements to check for multiple conditions. For example, if the first condition is false, it moves on to the next “elif” statement to check if that condition is true.

13. What is the difference between for and while loop?
Ans. The primary difference between for and while loops lies in when the number of iterations is known beforehand. for loops are best suited for situations where you know exactly how many times the loop will execute, often when iterating over a collection or sequence. while loops, on the other hand, are more flexible and used when the number of iterations is unknown and depends on a dynamic condition.

14. Describe a scenario where while loop is more suited than for loop?
Ans. Imagine you're asking a user to enter a correct password—you don’t know how many tries they’ll take. Since we do not know the number of iteration required, while loop is best used.
"""

#Practical Questions

#1. Write a python program to print "Hello,World!"

print("Hello,World!")

#2. Write a python program that displays your name and age.

a = {"name":"Dimple","age":"22"}
a

#3. Print python keywords.
import keyword
print("Python keywords are:")
print(keyword.kwlist)

#4. Check if a given word is a Python keyword
import keyword
word = "break"
if keyword.iskeyword(word):
    print(word, "is a Python keyword!")
else:
    print(word, "is not a keyword.")

#5. Create a list and tuple. Demonstrate how changing elements work different for each.
#list
a = [1,2,3,4,5]

a[3] = "9"

a #as list is mutable, you can change the elements within the list.

#Tuple
b = (1,2,3,4)

b[1] = "8" #Tuple is immutable so it will throw error.

#6. Write a function to demonstrate behavior of mutable and immutable arguments.
#Mutable

a = [1,2,3,4]
a
a.append(5)
a

#Immutable
n = (1,2,3,3,4,4,4,4)
n

n.append(6) #mutable objects can be modified using append but immutable object like tuple can not be modified and will throw error.

#7. Write program that performs basic arithmatic operations on two user input data.
num1 = int(input("Enter the first number"))
num2 = int(input("Enter the second number"))
print("sum:", num1 + num2)
print("difference:", num1 - num2)
print("multiply:", num1 * num2)
print("divide:", num1 / num2)

#8. Use of logical operators
x = 7
y = 12
if x > 0 and y > 0:
  print ("Both x and y are positive")

#9. Write a program to convert user input from string to integer, float and boolean types.

data = input("Please enter your number")

data

type(data)

int_val = int(data)
float_val = float(data)
bool_val = bool(data)

print("Integer:", int_val)
print("Float:", float_val)
print("Boolean:", bool_val)

#10. Type casting with list elements.

list_1 = ["1", "2", "3"]
int_list = [int(i) for i in list_1]
int_list

#11. Check if number is negetive, positive or zero.

num = int(input("Enter a number: "))
if num > 0:
    print("Positive")
elif num < 0:
    print("Negative")
else:
    print("Zero")

#12. Write a loop to print numbers 1 to 10.

x = 0
while x < 10:
  x = x+1
  print (x)

#13. Sum of all even numbers between 1 to 50.

sum = 0
for i in range(1,51):
  if i %2 == 0:
    sum = sum + i
    print("Sum of even numbers from 1 to 50 is:", sum)

#14. Reverse a string using while loop.

text = ("Random")
reversed_text = ""
i = len(text) - 1

while i >= 0:
    reversed_text += text[i]
    i -= 1

print("Reversed string:", reversed_text)

#15. Calculate the factorial of a number provided by the user using while loop.

num = int(input("Enter a number: "))
fact = 1

for i in range(1, num + 1):
    fact *= i

print("Factorial is:", fact)

